# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: cimg/node:18.18.1
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      # Install and save node_modules to cache
      - run: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      # run tests
      - run:
          name: Run Unit Tests
          command: yarn test --silent --updateSnapshot --runInBand --no-watchman --testPathPattern="/Board|Communicator|App|Settings|Account|UI/"
  image:
    docker:
      # specify the version you desire here
      - image: cimg/node:18.18.1
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      # Install and save node_modules to cache
      - run: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      # Build Docker Image
      # https://circleci.com/docs/2.0/building-docker-images/#overview
      - setup_remote_docker: # (2)
          version: default
          docker_layer_caching: false # (3)
      # build and push Docker image
      - run:
          name: Build Docker Image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            echo $TAG > ./public/version
            docker build -t cboard/cboard:$TAG -t cboard/cboard:latest .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push cboard/cboard:latest
            docker push cboard/cboard:$TAG
  deploy:
    machine:
      image: ubuntu-2204:2024.11.1
    steps:
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USERNAME@$SSH_SERVER 'bash -ic "docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock --env-file \
            /home/sharedFolder/env.qa cboard/cboard-bootstrap up -d" && exit'
  e2e:
    docker:
      - image: mcr.microsoft.com/playwright:v1.53.0-jammy
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      # Install and save node_modules to cache
      - run:
          name: Install dependencies
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      # run tests
      - run:
          name: Run E2E Tests
          command: yarn test:e2e tests/smoke.spec.js
      - store_artifacts:
          path: ./playwright-report
          destination: playwright-report-first
      - store_artifacts:
          path: /tmp/artifacts
workflows:
  version: 2
  build_test_image:
    jobs:
      - build:
          context: azure
      # - image:
      #     context: azure
      #     requires:
      #       - build
      # - deploy:
      #     context: azure
      #     requires:
      #      - image
      - e2e:
          context: azure
          # requires:
          #   - deploy
          filters:
            branches:
              only: Playwright
